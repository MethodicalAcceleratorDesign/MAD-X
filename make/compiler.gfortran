# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - gfortran compiler settings
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

#
# makedep
#

# fortran dependencies computation requires mod files (quite stupid, need loops)!
# FDEP = $(FC) -MM -cpp -J$(OBJDIR)

#
# preprocessor flags
#

CPPFLAGS += -D_GFORTRAN

#
# compiler flags
#

FFLAGS = -m$(ARCH) -O$(NOPT) -c

# most of fortran codes do not follow the standard F95
# so the line below generates to many warnings or errors
#FFLAGS = -m$(ARCH) -std=f95 -Wall -W -pedantic -c

#
# options flags
#

ifeq ($(DEBUG),yes)
FFLAGS += -g -ggdb
endif

ifeq ($(DCHECK),yes)
FFLAGS += -fbounds-check -Warray-bounds
endif

ifeq ($(PROFILE),yes)
FFLAGS += -pg
endif

ifeq ($(SHARED),yes)
FFLAGS += -fPIC
endif

ifeq ($(OPENMP),yes)
FFLAGS += $(if $(filter $(<F),$(OPENMPFILES)),-fopenmp,)
endif

ifeq ($(SANITIZE),yes)
FFLAGS += -fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined
endif

ifeq ($(COVERAGE),yes)
FFLAGS += -fprofile-arcs -ftest-coverage
endif

ifeq ($(INITNAN),yes)
FFLAGS += -finit-real=nan
endif

#
# extra flags
#

FFLAGS += -pipe -fno-second-underscore -fall-intrinsics -fno-range-check -fmax-stack-var-size=65536 -J$(OBJDIR)  $(FFLAGS_EXTRA)

# end of makefile
