!tests for closed orbit search with totalpath=true
! produces table with dependence of orbit and tune on rf frequency

option,-echo;
call, file="../share/ALS/als.seqx";
option,echo;

eg :=  1.5; !  ... in GeV 

beam, particle = electron, energy = eg;  

use, period=ALS;

select,flag=twiss,clear;
select, flag=twiss, column=name,s,Energy,beta11,beta22,beta33,alfa11,alfa22,mu1,mu2,mu3,disp1,disp2,t,pt;


create,table=orbitvsfreq,column=rffreq,
                              orbit_hidisp_x, orbit_hidisp_px,
                              orbit_x, orbit_px,
	          orbit_y, orbit_py,
	          orbit_t, orbit_pt,
	          q1,q2,
	          beta33min, beta33max;

! set rf frequency at harmonic 328
rffreq0 = 1e-6 * clight / (196.8781358/328) ;

rffreq_min =  rffreq0 - 1e-3;
rffreq_max =  rffreq0 + 1e-3;

rffreq = rffreq_min;

option, -info;

while(rffreq <= rffreq_max)
{

   ptc_create_universe;
     ptc_create_layout, model=1, method=6, nst=5, exact=true, closed_layout=true;

     !!!!!       T I M E   T R U E ,   T O T P A T H  T R U E
     ptc_setswitch, debuglevel=0, exact_mis=true, time=true, totalpath=true;

     ptc_twiss, table=twiss, icase=6, no=2, closed_orbit, t=0.0;
     
     if (abs(rffreq - rffreq0) < 1e-8)
      {
        write, table=twiss, file="ALS.6Dl.ptc.twiss";
        write, table=ptc_twiss_summary, file="ALS.6Dl.ptc.summ.twiss";
      }
   !  plot, haxis=s, vaxis=beta11, beta22, colour=100;
   !  plot, haxis=s, vaxis=x;
   !  plot, haxis=s, vaxis=pt;

     value, rffreq, table(ptc_twiss_summary, orbit_pt);

   ptc_end;
   
   orbit_x  = table(ptc_twiss_summary, orbit_x);
   orbit_px = table(ptc_twiss_summary, orbit_px);
   orbit_y  = table(ptc_twiss_summary, orbit_y);
   orbit_py = table(ptc_twiss_summary, orbit_py);
   orbit_t  = table(ptc_twiss_summary, orbit_t);
   orbit_pt = table(ptc_twiss_summary, orbit_pt);
   beta33min = table(ptc_twiss_summary, beta33min);
   beta33max = table(ptc_twiss_summary, beta33max);

   orbit_hidisp_x   = table(twiss, sd[1], x);
   orbit_hidisp_px  = table(twiss, sd[1], px);
   
   q1  = table(ptc_twiss_summary, q1);
   q2  = table(ptc_twiss_summary, q2);

   fill,table=orbitvsfreq;

   rffreq = rffreq + 1e-3;
 
}

write, table=orbitvsfreq, file="orbitvsfreq.tfs";


